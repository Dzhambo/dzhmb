# -*- coding: utf-8 -*-
"""Сортировка кучей. Реализуем структуру данных куча..ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ixALJ3s4_8nxBllW8srwIbfuMsImoNaB
"""

class Heap:

  def __init__(self,spis=[]):
    self.heap = spis
    self.size = len(spis)
    for i in range((self.size-1)//2,-1,-1):
      self.SiftDown(i,self.size)
      
  def __repr__(self):
    return str(self.heap)

  def swap(self,i,j):
    self.heap[i],self.heap[j] = self.heap[j], self.heap[i]

  def SiftUp(self):
    i = len(self.heap) - 1
    while self.heap[i]>self.heap[(i-1)//2] and i>0:
      self.heap[i], self.heap[(i-1)//2] = self.heap[(i-1)//2], self.heap[i]
      i = (i-1)//2
    return self.heap
  
  def SiftDown(self, i, size):
    while 2 * i + 1 < size:
        left = 2 * i + 1             
        right = 2 * i + 2            
        j = left
        if right < size and self.heap[right] > self.heap[left]:
            j = right
        if self.heap[i] >= self.heap[j]:
            break
        self.heap[i],self.heap[j] = self.heap[j],self.heap[i] 
        i = j
    return self.heap
  
  def Insert(self,x):
    self.heap.append(x)
    self.heap = self.SiftUp()
    return self.heap

  def ExtractMax(self):
    Min = self.heap[0]
    self.heap[0] = self.heap[-1]
    self.heap.pop(len(self.heap)-1)
    self.SiftDown()
    return Min
 

def HeapSort(A):
  heap = Heap(A)
  size = heap.size - 1
  for i in range(heap.size-1,0,-1):
    heap.swap(size,0)
    size-=1
    heap.SiftDown(0,size)
  return heap